basePath: /
definitions:
  focus.APIError:
    properties:
      code:
        description: |-
          Code is the HTTP status code.
          example: 400
        type: integer
      message:
        description: |-
          Message is a human-readable error message.
          example: "invalid JSON body"
        type: string
    type: object
  focus.FocusRequest:
    properties:
      date:
        description: |-
          Date is the desired focus date. Defaults to tomorrow if not provided.
          example: "2025-05-26"
        type: string
      hours:
        description: |-
          Hours is the number of hours to focus. Derived from calendar if zero.
          example: 5
        type: number
    type: object
  focus.FocusResponse:
    properties:
      items:
        description: Items is a list of focus response items.
        items:
          $ref: '#/definitions/focus.FocusResponseItem'
        type: array
    type: object
  focus.FocusResponseItem:
    properties:
      est:
        description: |-
          Est represents the estimated duration of the task.
          example: 2.5
        type: number
      p:
        description: |-
          P represents the project identifier.
          example: "project-a"
        type: string
      t:
        description: |-
          T represents the task ID.
          example: "task-123"
        type: string
    type: object
  peek.APIError:
    properties:
      code:
        description: |-
          Code is the HTTP status code.
          example: 400
        type: integer
      message:
        description: |-
          Message is a human-readable error message.
          example: "invalid JSON body"
        type: string
    type: object
  peek.ProjectPeekRequest:
    properties:
      fields:
        description: |-
          Fields to include in the response.
          example: ["name", "description"]
        items:
          type: string
        type: array
      id:
        description: |-
          ID of the project.
          example: "project-456"
        type: string
    type: object
  peek.ProjectPeekResponse:
    properties:
      f:
        additionalProperties: true
        description: F is a map containing selected fields and values.
        type: object
      p:
        description: |-
          P is the project identifier.
          example: "project-456"
        type: string
    type: object
  peek.TaskPeekRequest:
    properties:
      fields:
        description: |-
          Fields to include in the response.
          example: ["name", "status"]
        items:
          type: string
        type: array
      id:
        description: |-
          ID of the task.
          example: "task-123"
        type: string
    type: object
  peek.TaskPeekResponse:
    properties:
      f:
        additionalProperties: true
        description: F is a map containing selected fields and values.
        type: object
      t:
        description: |-
          T is the task identifier.
          example: "task-123"
        type: string
    type: object
  review.APIError:
    properties:
      code:
        description: |-
          Code is the HTTP status code.
          example: 400
        type: integer
      message:
        description: |-
          Message is a human-readable error message.
          example: "invalid JSON body"
        type: string
    type: object
  review.ReviewRequest:
    properties:
      project_ids:
        description: |-
          ProjectIDs is the list of project identifiers.
          example: ["proj-1", "proj-2"]
        items:
          type: string
        type: array
    type: object
  review.ReviewResponseItem:
    properties:
      d:
        description: |-
          D is the due date in YYYY-MM-DD format.
          example: "2025-05-26"
        type: string
      p:
        description: |-
          P represents the project identifier.
          example: "proj-1"
        type: string
      t:
        description: |-
          T represents the task identifier.
          example: "task-123"
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: MCP server exposing micro-tools for Vikunja integration
  title: Vikunja MCP Server API
  version: "1.0"
paths:
  /api/v1/360-review:
    post:
      consumes:
      - application/json
      description: Fetch the nearest important task for each specified project
      parameters:
      - description: 360-review request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/review.ReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/review.ReviewResponseItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/review.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/review.APIError'
      summary: 360-review
      tags:
      - review
  /api/v1/daily-focus:
    post:
      consumes:
      - application/json
      description: Set or update the daily focus for the user
      parameters:
      - description: Daily focus payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/focus.FocusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/focus.FocusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/focus.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/focus.APIError'
      summary: Create or update daily focus
      tags:
      - focus
  /api/v1/project-peek:
    post:
      consumes:
      - application/json
      description: Fetch selected fields for a given project ID
      parameters:
      - description: Project peek request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/peek.ProjectPeekRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/peek.ProjectPeekResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/peek.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/peek.APIError'
      summary: Peek a project
      tags:
      - peek
  /api/v1/task-peek:
    post:
      consumes:
      - application/json
      description: Fetch selected fields for a given task ID
      parameters:
      - description: Task peek request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/peek.TaskPeekRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/peek.TaskPeekResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/peek.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/peek.APIError'
      summary: Peek a task
      tags:
      - peek
swagger: "2.0"
