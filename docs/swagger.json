{
    "swagger": "2.0",
    "info": {
        "description": "MCP server exposing micro-tools for Vikunja integration",
        "title": "Vikunja MCP Server API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/api/v1/360-review": {
            "post": {
                "description": "Fetch the nearest important task for each specified project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "360-review",
                "parameters": [
                    {
                        "description": "360-review request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/review.ReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/review.ReviewResponseItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/review.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/review.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-focus": {
            "post": {
                "description": "Set or update the daily focus for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "focus"
                ],
                "summary": "Create or update daily focus",
                "parameters": [
                    {
                        "description": "Daily focus payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/focus.FocusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/focus.FocusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/focus.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/focus.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/project-peek": {
            "post": {
                "description": "Fetch selected fields for a given project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "peek"
                ],
                "summary": "Peek a project",
                "parameters": [
                    {
                        "description": "Project peek request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/peek.ProjectPeekRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/peek.ProjectPeekResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/peek.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/peek.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/task-peek": {
            "post": {
                "description": "Fetch selected fields for a given task ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "peek"
                ],
                "summary": "Peek a task",
                "parameters": [
                    {
                        "description": "Task peek request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/peek.TaskPeekRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/peek.TaskPeekResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/peek.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/peek.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "focus.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is the HTTP status code.\nexample: 400",
                    "type": "integer"
                },
                "message": {
                    "description": "Message is a human-readable error message.\nexample: \"invalid JSON body\"",
                    "type": "string"
                }
            }
        },
        "focus.FocusRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Date is the desired focus date. Defaults to tomorrow if not provided.\nexample: \"2025-05-26\"",
                    "type": "string"
                },
                "hours": {
                    "description": "Hours is the number of hours to focus. Derived from calendar if zero.\nexample: 5",
                    "type": "number"
                }
            }
        },
        "focus.FocusResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "Items is a list of focus response items.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/focus.FocusResponseItem"
                    }
                }
            }
        },
        "focus.FocusResponseItem": {
            "type": "object",
            "properties": {
                "est": {
                    "description": "Est represents the estimated duration of the task.\nexample: 2.5",
                    "type": "number"
                },
                "p": {
                    "description": "P represents the project identifier.\nexample: \"project-a\"",
                    "type": "string"
                },
                "t": {
                    "description": "T represents the task ID.\nexample: \"task-123\"",
                    "type": "string"
                }
            }
        },
        "peek.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is the HTTP status code.\nexample: 400",
                    "type": "integer"
                },
                "message": {
                    "description": "Message is a human-readable error message.\nexample: \"invalid JSON body\"",
                    "type": "string"
                }
            }
        },
        "peek.ProjectPeekRequest": {
            "type": "object",
            "properties": {
                "fields": {
                    "description": "Fields to include in the response.\nexample: [\"name\", \"description\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "ID of the project.\nexample: \"project-456\"",
                    "type": "string"
                }
            }
        },
        "peek.ProjectPeekResponse": {
            "type": "object",
            "properties": {
                "f": {
                    "description": "F is a map containing selected fields and values.",
                    "type": "object",
                    "additionalProperties": true
                },
                "p": {
                    "description": "P is the project identifier.\nexample: \"project-456\"",
                    "type": "string"
                }
            }
        },
        "peek.TaskPeekRequest": {
            "type": "object",
            "properties": {
                "fields": {
                    "description": "Fields to include in the response.\nexample: [\"name\", \"status\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "ID of the task.\nexample: \"task-123\"",
                    "type": "string"
                }
            }
        },
        "peek.TaskPeekResponse": {
            "type": "object",
            "properties": {
                "f": {
                    "description": "F is a map containing selected fields and values.",
                    "type": "object",
                    "additionalProperties": true
                },
                "t": {
                    "description": "T is the task identifier.\nexample: \"task-123\"",
                    "type": "string"
                }
            }
        },
        "review.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is the HTTP status code.\nexample: 400",
                    "type": "integer"
                },
                "message": {
                    "description": "Message is a human-readable error message.\nexample: \"invalid JSON body\"",
                    "type": "string"
                }
            }
        },
        "review.ReviewRequest": {
            "type": "object",
            "properties": {
                "project_ids": {
                    "description": "ProjectIDs is the list of project identifiers.\nexample: [\"proj-1\", \"proj-2\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "review.ReviewResponseItem": {
            "type": "object",
            "properties": {
                "d": {
                    "description": "D is the due date in YYYY-MM-DD format.\nexample: \"2025-05-26\"",
                    "type": "string"
                },
                "p": {
                    "description": "P represents the project identifier.\nexample: \"proj-1\"",
                    "type": "string"
                },
                "t": {
                    "description": "T represents the task identifier.\nexample: \"task-123\"",
                    "type": "string"
                }
            }
        }
    }
}