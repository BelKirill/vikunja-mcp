/*
Vikunja API

Testing AssigneesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_AssigneesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AssigneesAPIService TasksTaskIDAssigneesBulkPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var taskID int32

		resp, httpRes, err := apiClient.AssigneesAPI.TasksTaskIDAssigneesBulkPost(context.Background(), taskID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssigneesAPIService TasksTaskIDAssigneesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var taskID int32

		resp, httpRes, err := apiClient.AssigneesAPI.TasksTaskIDAssigneesGet(context.Background(), taskID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssigneesAPIService TasksTaskIDAssigneesPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var taskID int32

		resp, httpRes, err := apiClient.AssigneesAPI.TasksTaskIDAssigneesPut(context.Background(), taskID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssigneesAPIService TasksTaskIDAssigneesUserIDDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var taskID int32
		var userID int32

		resp, httpRes, err := apiClient.AssigneesAPI.TasksTaskIDAssigneesUserIDDelete(context.Background(), taskID, userID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
